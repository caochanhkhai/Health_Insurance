// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(VHIDbContext))]
    [Migration("20231218150958_InitDB2")]
    partial class InitDB2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Domain.BenhVien", b =>
                {
                    b.Property<int>("ID_BenhVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_BenhVien"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBenhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_BenhVien");

                    b.ToTable("BenhVien");
                });

            modelBuilder.Entity("API.Domain.BenhVien_GoiBaoHiem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_BenhVien1")
                        .HasColumnType("int");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_BenhVien1");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.ToTable("BenhVien_GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.ChiTietChinhSach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DieuKienApDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HanMucChiTra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_ChinhSach1")
                        .HasColumnType("int");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_ChinhSach1");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.ToTable("ChiTietChinhSach");
                });

            modelBuilder.Entity("API.Domain.ChinhSach", b =>
                {
                    b.Property<int>("ID_ChinhSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ChinhSach"));

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenChinhSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianPhatHanh")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_ChinhSach");

                    b.ToTable("ChinhSach");
                });

            modelBuilder.Entity("API.Domain.GoiBaoHiem", b =>
                {
                    b.Property<int>("ID_GoiBaoHiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GoiBaoHiem"));

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayPhatHanh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBaoHiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThoiHan")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_GoiBaoHiem");

                    b.ToTable("GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.LichSuChiTra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_YeuCauChiTra1")
                        .HasColumnType("int");

                    b.Property<decimal>("SoTienChiTra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenBenhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianChiTra")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_YeuCauChiTra1");

                    b.ToTable("LichSuChiTra");
                });

            modelBuilder.Entity("API.Domain.PhieuThanhToanBaoHiem", b =>
                {
                    b.Property<int>("ID_PhieuThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_PhieuThanhToan"));

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_HopDong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_PhieuThanhToan");

                    b.ToTable("PhieuThanhToanBaoHiem");
                });

            modelBuilder.Entity("API.Domain.QuanLyBaoHiem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("HanMucDaSuDung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.Property<int>("ID_KhachHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.ToTable("QuanLyBaoHiem");
                });

            modelBuilder.Entity("API.Domain.YeuCauChiTra", b =>
                {
                    b.Property<int>("ID_YeuCauChiTra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_YeuCauChiTra"));

                    b.Property<string>("ChanDoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HauQua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucDieuTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.Property<int>("ID_KhachHang")
                        .HasColumnType("int");

                    b.Property<string>("MoiQuanHe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiYeuCau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDieuTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTienYeuCauChiTra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TinhTrangDuyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruongHopChiTra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_YeuCauChiTra");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.ToTable("YeuCauChiTra");
                });

            modelBuilder.Entity("API.Domain.BenhVien_GoiBaoHiem", b =>
                {
                    b.HasOne("API.Domain.BenhVien", "ID_BenhVien")
                        .WithMany()
                        .HasForeignKey("ID_BenhVien1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_BenhVien");

                    b.Navigation("ID_GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.ChiTietChinhSach", b =>
                {
                    b.HasOne("API.Domain.ChinhSach", "ID_ChinhSach")
                        .WithMany()
                        .HasForeignKey("ID_ChinhSach1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_ChinhSach");

                    b.Navigation("ID_GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.LichSuChiTra", b =>
                {
                    b.HasOne("API.Domain.YeuCauChiTra", "ID_YeuCauChiTra")
                        .WithMany()
                        .HasForeignKey("ID_YeuCauChiTra1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_YeuCauChiTra");
                });

            modelBuilder.Entity("API.Domain.QuanLyBaoHiem", b =>
                {
                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.YeuCauChiTra", b =>
                {
                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_GoiBaoHiem");
                });
#pragma warning restore 612, 618
        }
    }
}
