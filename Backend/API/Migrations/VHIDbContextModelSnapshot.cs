// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(VHIDbContext))]
    partial class VHIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Domain.BenhVien", b =>
                {
                    b.Property<int>("ID_BenhVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_BenhVien"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBenhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_BenhVien");

                    b.ToTable("BenhVien");
                });

            modelBuilder.Entity("API.Domain.BenhVien_GoiBaoHiem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_BenhVien1")
                        .HasColumnType("int");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_BenhVien1");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.ToTable("BenhVien_GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.ChiTietChinhSach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DieuKienApDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HanMucChiTra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_ChinhSach1")
                        .HasColumnType("int");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_ChinhSach1");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.ToTable("ChiTietChinhSach");
                });

            modelBuilder.Entity("API.Domain.ChinhSach", b =>
                {
                    b.Property<int>("ID_ChinhSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ChinhSach"));

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenChinhSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianPhatHanh")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_ChinhSach");

                    b.ToTable("ChinhSach");
                });

            modelBuilder.Entity("API.Domain.CongTy", b =>
                {
                    b.Property<int>("ID_CongTy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_CongTy"));

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNhaTenDuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_CongTy");

                    b.ToTable("CongTy");
                });

            modelBuilder.Entity("API.Domain.DatLichTuVan", b =>
                {
                    b.Property<int>("ID_YeuCauTuVan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_YeuCauTuVan"));

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_KhachHang1")
                        .HasColumnType("int");

                    b.Property<int>("ID_NhanVien1ID_NhanVien")
                        .HasColumnType("int");

                    b.Property<int>("ID_NhanVien2ID_NhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrangDuyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_YeuCauTuVan");

                    b.HasIndex("ID_KhachHang1");

                    b.HasIndex("ID_NhanVien1ID_NhanVien");

                    b.HasIndex("ID_NhanVien2ID_NhanVien");

                    b.ToTable("DatLichTuVan");
                });

            modelBuilder.Entity("API.Domain.GoiBaoHiem", b =>
                {
                    b.Property<int>("ID_GoiBaoHiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GoiBaoHiem"));

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayPhatHanh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBaoHiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThoiHan")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_GoiBaoHiem");

                    b.ToTable("GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.HopDong", b =>
                {
                    b.Property<int>("ID_HopDong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HopDong"));

                    b.Property<string>("DieuKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaTriHopDong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("HieuLuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.Property<int>("ID_KhachHang1")
                        .HasColumnType("int");

                    b.Property<int>("ID_NhanVien1")
                        .HasColumnType("int");

                    b.Property<int>("ID_PhieuDangKi1")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayKyKet")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThoiHan")
                        .HasColumnType("int");

                    b.HasKey("ID_HopDong");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.HasIndex("ID_KhachHang1");

                    b.HasIndex("ID_NhanVien1");

                    b.HasIndex("ID_PhieuDangKi1");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("API.Domain.KhachHang", b =>
                {
                    b.Property<int>("ID_KhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_KhachHang"));

                    b.Property<int>("CanNang")
                        .HasColumnType("int");

                    b.Property<string>("ChiTietCongViec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChieuCao")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_CongTy1")
                        .HasColumnType("int");

                    b.Property<int>("ID_TaiKhoan1")
                        .HasColumnType("int");

                    b.Property<DateTime>("NamSinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NganHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgheNghiep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNhaTenDuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ThuNhap")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_KhachHang");

                    b.HasIndex("ID_CongTy1");

                    b.HasIndex("ID_TaiKhoan1");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("API.Domain.LichSuChiTra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_YeuCauChiTra1")
                        .HasColumnType("int");

                    b.Property<decimal>("SoTienChiTra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenBenhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianChiTra")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_YeuCauChiTra1");

                    b.ToTable("LichSuChiTra");
                });

            modelBuilder.Entity("API.Domain.NhanVien", b =>
                {
                    b.Property<int>("ID_NhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_NhanVien"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_TaiKhoan1")
                        .HasColumnType("int");

                    b.Property<string>("LoaiNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NamSinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NganHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNhaTenDuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_NhanVien");

                    b.HasIndex("ID_TaiKhoan1");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("API.Domain.PhieuDangKi", b =>
                {
                    b.Property<int>("ID_PhieuDangKi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_PhieuDangKi"));

                    b.Property<string>("DiaDiemKiKet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.Property<int>("ID_KhachHang1")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianKiKet")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrangDuyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToKhaiSucKhoe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_PhieuDangKi");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.HasIndex("ID_KhachHang1");

                    b.ToTable("PhieuDangKi");
                });

            modelBuilder.Entity("API.Domain.PhieuThanhToanBaoHiem", b =>
                {
                    b.Property<int>("ID_PhieuThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_PhieuThanhToan"));

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_HopDong1")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_PhieuThanhToan");

                    b.HasIndex("ID_HopDong1");

                    b.ToTable("PhieuThanhToanBaoHiem");
                });

            modelBuilder.Entity("API.Domain.QuanLyBaoHiem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("HanMucDaSuDung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_GoiBaoHiem1")
                        .HasColumnType("int");

                    b.Property<int>("ID_KhachHang1")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_GoiBaoHiem1");

                    b.HasIndex("ID_KhachHang1");

                    b.ToTable("QuanLyBaoHiem");
                });

            modelBuilder.Entity("API.Domain.TaiKhoan", b =>
                {
                    b.Property<int>("ID_TaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_TaiKhoan"));

                    b.Property<string>("LoaiTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TaiKhoan");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("API.Domain.YeuCauChiTra", b =>
                {
                    b.Property<int>("ID_YeuCauChiTra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_YeuCauChiTra"));

                    b.Property<string>("ChanDoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HauQua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucDieuTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_QLBHID")
                        .HasColumnType("int");

                    b.Property<string>("MoiQuanHe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiYeuCau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDieuTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTienYeuCauChiTra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TinhTrangDuyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruongHopChiTra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_YeuCauChiTra");

                    b.HasIndex("ID_QLBHID");

                    b.ToTable("YeuCauChiTra");
                });

            modelBuilder.Entity("API.Domain.BenhVien_GoiBaoHiem", b =>
                {
                    b.HasOne("API.Domain.BenhVien", "ID_BenhVien")
                        .WithMany()
                        .HasForeignKey("ID_BenhVien1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_BenhVien");

                    b.Navigation("ID_GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.ChiTietChinhSach", b =>
                {
                    b.HasOne("API.Domain.ChinhSach", "ID_ChinhSach")
                        .WithMany()
                        .HasForeignKey("ID_ChinhSach1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_ChinhSach");

                    b.Navigation("ID_GoiBaoHiem");
                });

            modelBuilder.Entity("API.Domain.DatLichTuVan", b =>
                {
                    b.HasOne("API.Domain.KhachHang", "ID_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_KhachHang1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.NhanVien", "ID_NhanVien1")
                        .WithMany()
                        .HasForeignKey("ID_NhanVien1ID_NhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.NhanVien", "ID_NhanVien2")
                        .WithMany()
                        .HasForeignKey("ID_NhanVien2ID_NhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_KhachHang");

                    b.Navigation("ID_NhanVien1");

                    b.Navigation("ID_NhanVien2");
                });

            modelBuilder.Entity("API.Domain.HopDong", b =>
                {
                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.KhachHang", "ID_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_KhachHang1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.NhanVien", "ID_NhanVien")
                        .WithMany()
                        .HasForeignKey("ID_NhanVien1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.PhieuDangKi", "ID_PhieuDangKi")
                        .WithMany()
                        .HasForeignKey("ID_PhieuDangKi1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_GoiBaoHiem");

                    b.Navigation("ID_KhachHang");

                    b.Navigation("ID_NhanVien");

                    b.Navigation("ID_PhieuDangKi");
                });

            modelBuilder.Entity("API.Domain.KhachHang", b =>
                {
                    b.HasOne("API.Domain.CongTy", "ID_CongTy")
                        .WithMany()
                        .HasForeignKey("ID_CongTy1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.TaiKhoan", "ID_TaiKhoan")
                        .WithMany()
                        .HasForeignKey("ID_TaiKhoan1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_CongTy");

                    b.Navigation("ID_TaiKhoan");
                });

            modelBuilder.Entity("API.Domain.LichSuChiTra", b =>
                {
                    b.HasOne("API.Domain.YeuCauChiTra", "ID_YeuCauChiTra")
                        .WithMany()
                        .HasForeignKey("ID_YeuCauChiTra1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_YeuCauChiTra");
                });

            modelBuilder.Entity("API.Domain.NhanVien", b =>
                {
                    b.HasOne("API.Domain.TaiKhoan", "ID_TaiKhoan")
                        .WithMany()
                        .HasForeignKey("ID_TaiKhoan1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_TaiKhoan");
                });

            modelBuilder.Entity("API.Domain.PhieuDangKi", b =>
                {
                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.KhachHang", "ID_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_KhachHang1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_GoiBaoHiem");

                    b.Navigation("ID_KhachHang");
                });

            modelBuilder.Entity("API.Domain.PhieuThanhToanBaoHiem", b =>
                {
                    b.HasOne("API.Domain.HopDong", "ID_HopDong")
                        .WithMany()
                        .HasForeignKey("ID_HopDong1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_HopDong");
                });

            modelBuilder.Entity("API.Domain.QuanLyBaoHiem", b =>
                {
                    b.HasOne("API.Domain.GoiBaoHiem", "ID_GoiBaoHiem")
                        .WithMany()
                        .HasForeignKey("ID_GoiBaoHiem1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.KhachHang", "ID_KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_KhachHang1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_GoiBaoHiem");

                    b.Navigation("ID_KhachHang");
                });

            modelBuilder.Entity("API.Domain.YeuCauChiTra", b =>
                {
                    b.HasOne("API.Domain.QuanLyBaoHiem", "ID_QLBH")
                        .WithMany()
                        .HasForeignKey("ID_QLBHID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ID_QLBH");
                });
#pragma warning restore 612, 618
        }
    }
}
